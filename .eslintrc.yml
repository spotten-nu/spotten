root: true
parser: "@typescript-eslint/parser"
parserOptions:
  project: ./tsconfig.json

plugins:
  - "@typescript-eslint"
  - import
  - simple-import-sort
  - unicorn

extends:
  - eslint:recommended
  - plugin:@typescript-eslint/recommended
  - plugin:@typescript-eslint/recommended-requiring-type-checking
  - plugin:react/recommended
  - plugin:react-hooks/recommended

rules:
  # Disable some recommended rules:
  "@typescript-eslint/no-empty-function": off
  "@typescript-eslint/restrict-template-expressions": off
  react/react-in-jsx-scope: "off"

  # Enable additional rules:
  "@typescript-eslint/array-type":
    - error
    - default: array-simple
  "@typescript-eslint/explicit-member-accessibility": error
  "@typescript-eslint/member-ordering":
    - error
    - default:
        memberTypes:
          - field
          - constructor
          - [public-method, public-get, public-set]
          - [protected-method, protected-get, protected-set]
          - [private-method, private-get, private-set]
  "@typescript-eslint/no-non-null-assertion": error
  "@typescript-eslint/no-unnecessary-boolean-literal-compare": error
  "@typescript-eslint/no-unnecessary-condition": error
  "@typescript-eslint/prefer-readonly": error
  "@typescript-eslint/promise-function-async": error
  eqeqeq: error
  import/first: error
  import/newline-after-import: error
  no-duplicate-imports: error
  no-return-await: error
  object-shorthand: error
  radix: error
  simple-import-sort/imports:
    - error
    - groups:
        - ["^\\u0000", "^node:", "^@?\\w"]
        - ["^", "^\\."]
  unicorn/filename-case:
    - error
    - case: camelCase
  unicorn/prefer-node-protocol: error

settings:
  import/resolver:
    typescript:
      alwaysTryTypes: true
